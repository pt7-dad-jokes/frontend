{"ast":null,"code":"import _slicedToArray from \"C:\\\\Lambda\\\\Unit 2 build week\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Lambda\\\\Unit 2 build week\\\\frontend\\\\src\\\\components\\\\RegForm.js\";\nimport React, { useState, Fragment, useEffect } from \"react\";\nimport { Formik, Field } from \"formik\";\nimport s from \"./app.component.css\";\nimport * as yup from \"yup\";\nconst intialState = {\n  name: \"\",\n  email: \"\",\n  password: \"\"\n};\nconst userSchema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().email().required(),\n  password: yup.string().required().max(13).min(8)\n});\n\nfunction MyComponent(props) {\n  const _useState = useState(intialState),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"\".concat(s.output),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, JSON.stringify(user, null, 2)), React.createElement(Formik, {\n    initialValues: user,\n    onSubmit: (values, actions) => {\n      actions.setSubmitting(true);\n      setUser(values);\n      setTimeout(() => {\n        actions.setSubmitting(false);\n      }, 2000);\n    },\n    validationSchema: userSchema,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props => !props.isSubmitting ? React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    className: s.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"email\",\n    placeholder: \"Enter email\",\n    onChange: props.handleChange,\n    name: \"email\",\n    value: props.values.email,\n    className: s.text_field,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), props.errors.email && props.touched.email ? React.createElement(\"span\", {\n    className: s.field_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, props.errors.email) : \"\", React.createElement(Field, {\n    type: \"password\",\n    onChange: props.handleChange,\n    name: \"password\",\n    value: props.values.password,\n    placeholder: \"Password\",\n    className: s.text_field,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), props.errors.password && props.touched.password ? React.createElement(\"span\", {\n    className: s.field_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, props.errors.password) : \"\", React.createElement(Field, {\n    name: \"name\",\n    onChange: props.handleChange,\n    value: props.values.name,\n    type: \"text\",\n    placeholder: \"Name\",\n    className: s.text_field,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), props.errors.name && props.touched.name ? React.createElement(\"span\", {\n    className: s.field_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, props.errors.name) : \"\", React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: !props.dirty && props.isSubmitting,\n    className: \"\".concat(s.button, \" \").concat(s.submit_button),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"button\", {\n    disabled: !props.dirty,\n    onClick: props.handleReset,\n    type: \"button\",\n    className: s.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Reset\")) : React.createElement(\"div\", {\n    className: s.overlay,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  })));\n}\n\nexport default MyComponent;","map":{"version":3,"sources":["C:\\Lambda\\Unit 2 build week\\frontend\\src\\components\\RegForm.js"],"names":["React","useState","Fragment","useEffect","Formik","Field","s","yup","intialState","name","email","password","userSchema","object","shape","string","required","max","min","MyComponent","props","user","setUser","output","JSON","stringify","values","actions","setSubmitting","setTimeout","isSubmitting","handleSubmit","form","handleChange","text_field","errors","touched","field_text","dirty","button","submit_button","handleReset","overlay"],"mappings":"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","sourcesContent":["import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Formik, Field } from \"formik\";\r\nimport s from \"./app.component.css\";\r\nimport * as yup from \"yup\";\r\n\r\nconst intialState = {\r\n  name: \"\",\r\n  email: \"\",\r\n  password: \"\"\r\n};\r\nconst userSchema = yup.object().shape({\r\n  name: yup.string().required(),\r\n  email: yup\r\n    .string()\r\n    .email()\r\n    .required(),\r\n  password: yup\r\n    .string()\r\n    .required()\r\n    .max(13)\r\n    .min(8)\r\n});\r\nfunction MyComponent(props) {\r\n  const [user, setUser] = useState(intialState);\r\n  return (\r\n    <Fragment>\r\n      <span className={`${s.output}`}>{JSON.stringify(user, null, 2)}</span>\r\n      <Formik\r\n        initialValues={user}\r\n        onSubmit={(values, actions) => {\r\n          actions.setSubmitting(true);\r\n          setUser(values);\r\n          setTimeout(() => {\r\n            actions.setSubmitting(false);\r\n          }, 2000);\r\n        }}\r\n        validationSchema={userSchema}\r\n      >\r\n        {props =>\r\n          !props.isSubmitting ? (\r\n            <form onSubmit={props.handleSubmit} className={s.form}>\r\n              <Field\r\n                type=\"email\"\r\n                placeholder=\"Enter email\"\r\n                onChange={props.handleChange}\r\n                name=\"email\"\r\n                value={props.values.email}\r\n                className={s.text_field}\r\n              />\r\n\r\n              {props.errors.email && props.touched.email ? (\r\n                <span className={s.field_text}>{props.errors.email}</span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n\r\n              <Field\r\n                type=\"password\"\r\n                onChange={props.handleChange}\r\n                name=\"password\"\r\n                value={props.values.password}\r\n                placeholder=\"Password\"\r\n                className={s.text_field}\r\n              />\r\n\r\n              {props.errors.password && props.touched.password ? (\r\n                <span className={s.field_text}>{props.errors.password}</span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <Field\r\n                name=\"name\"\r\n                onChange={props.handleChange}\r\n                value={props.values.name}\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                className={s.text_field}\r\n              />\r\n              {props.errors.name && props.touched.name ? (\r\n                <span className={s.field_text}>{props.errors.name}</span>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              <button\r\n                type=\"submit\"\r\n                disabled={!props.dirty && props.isSubmitting}\r\n                className={`${s.button} ${s.submit_button}`}\r\n              >\r\n                Submit\r\n              </button>\r\n              <button\r\n                disabled={!props.dirty}\r\n                onClick={props.handleReset}\r\n                type=\"button\"\r\n                className={s.button}\r\n              >\r\n                Reset\r\n              </button>\r\n            </form>\r\n          ) : (\r\n            <div className={s.overlay} />\r\n          )\r\n        }\r\n      </Formik>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default MyComponent;"]},"metadata":{},"sourceType":"module"}