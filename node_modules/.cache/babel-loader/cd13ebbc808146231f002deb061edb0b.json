{"ast":null,"code":"import _slicedToArray from \"/Users/codycaro/Desktop/LambdaProjects/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/codycaro/Desktop/LambdaProjects/frontend/src/components/LoginForm.js\";\nimport React, { useState } from \"react\";\nimport { Form, Field, withFormik } from \"formik\";\n\nfunction LoginForm({\n  errors,\n  touched,\n  values,\n  status\n}) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: \"input\",\n    type: \"text\",\n    name: [\"username\", \"email\"],\n    placeholder: \"Username/Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/codycaro/Desktop/LambdaProjects/frontend/src/components/LoginForm.js"],"names":["React","useState","Form","Field","withFormik","LoginForm","errors","touched","values","status","users","setUsers"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,QAAwC,QAAxC;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA,MAAnB;AAA2BC,EAAAA;AAA3B,CAAnB,EAAwD;AAAA,oBAC5BR,QAAQ,CAAC,EAAD,CADoB;AAAA;AAAA,QAC/CS,KAD+C;AAAA,QACxCC,QADwC;;AAGtD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAE,CAAC,UAAD,EAAa,OAAb,CAHR;AAIE,IAAA,WAAW,EAAC,gBAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAYD","sourcesContent":["import React, { useState } from \"react\";\nimport { Form, Field, withFormik } from \"formik\";\n\nfunction LoginForm({ errors, touched, values, status }) {\n  const [users, setUsers] = useState([]);\n\n  return (\n    <div>\n      <Form>\n        <Field\n          component=\"input\"\n          type=\"text\"\n          name={[\"username\", \"email\"]}\n          placeholder=\"Username/Email\"\n        />\n      </Form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}