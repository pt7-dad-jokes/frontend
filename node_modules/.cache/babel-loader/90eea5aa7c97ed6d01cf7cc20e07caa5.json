{"ast":null,"code":"import _slicedToArray from \"/Users/codycaro/Desktop/LambdaProjects/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/codycaro/Desktop/LambdaProjects/frontend/src/components/LoginForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Field, withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\n\nfunction LoginForm({\n  errors,\n  touched,\n  values,\n  status\n}) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  useEffect(() => {\n    if (status) {\n      setUsers([...users, status]);\n    }\n  }, [status]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: \"input\",\n    type: \"text\",\n    name: [\"username\", \"email\"],\n    placeholder: \"Username/Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Field, {\n    component: \"input\",\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"checkbox-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Remember Me\", React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"rememberMe\",\n    checked: values.rememberMe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Submit!\")));\n}\n\nconst formikLoginHOC = withFormik({\n  mapPropsToValues({\n    username,\n    email,\n    password,\n    rememberMe\n  }) {\n    return {\n      username: username || \"\",\n      email: email || \"\",\n      password: password || \"\",\n      rememberMe: rememberMe || false\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required(\"not a good input\"),\n    email: Yup.string().required(\"not a good input\"),\n    password: Yup.number().required(),\n    rememberMe: Yup.string()\n  }),\n\n  handleSubmit(values, {\n    setStatus,\n    resetForm\n  }) {\n    axios.post(\"https://reqres.in/api/users\", values).then(res => {\n      console.log(\"handleSubmit: then: res: \", res);\n      setStatus(res.data);\n      resetForm();\n    }).catch(err => console.error(\"handleSubmit: catch: err: \", err));\n  }\n\n});\nconst LoginFormWithFormik = formikLoginHOC(LoginForm);\nexport default LoginFormWithFormik;","map":{"version":3,"sources":["/Users/codycaro/Desktop/LambdaProjects/frontend/src/components/LoginForm.js"],"names":["React","useState","useEffect","Form","Field","withFormik","Yup","axios","makeStyles","MenuItem","TextField","LoginForm","errors","touched","values","status","users","setUsers","rememberMe","formikLoginHOC","mapPropsToValues","username","email","password","validationSchema","object","shape","string","required","number","handleSubmit","setStatus","resetForm","post","then","res","console","log","data","catch","err","error","LoginFormWithFormik"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Field, withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\n\nfunction LoginForm({ errors, touched, values, status }) {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    if (status) {\n      setUsers([...users, status]);\n    }\n  }, [status]);\n\n  return (\n    <div>\n      <Form>\n        <Field\n          component=\"input\"\n          type=\"text\"\n          name={[\"username\", \"email\"]}\n          placeholder=\"Username/Email\"\n        />\n        <Field\n          component=\"input\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n        />\n        <label className=\"checkbox-container\">\n          Remember Me\n          <Field\n            type=\"checkbox\"\n            name=\"rememberMe\"\n            checked={values.rememberMe}\n          />\n          <span className=\"checkmark\" />\n        </label>\n        <button>Submit!</button>\n      </Form>\n    </div>\n  );\n}\n\nconst formikLoginHOC = withFormik({\n  mapPropsToValues({ username, email, password, rememberMe }) {\n    return {\n      username: username || \"\",\n      email: email || \"\",\n      password: password || \"\",\n      rememberMe: rememberMe || false\n    };\n  },\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required(\"not a good input\"),\n    email: Yup.string().required(\"not a good input\"),\n    password: Yup.number().required(),\n    rememberMe: Yup.string()\n  }),\n  handleSubmit(values, { setStatus, resetForm }) {\n    axios\n      .post(\"https://reqres.in/api/users\", values)\n      .then(res => {\n        console.log(\"handleSubmit: then: res: \", res);\n        setStatus(res.data);\n        resetForm();\n      })\n      .catch(err => console.error(\"handleSubmit: catch: err: \", err));\n  }\n});\nconst LoginFormWithFormik = formikLoginHOC(LoginForm);\n\nexport default LoginFormWithFormik;\n"]},"metadata":{},"sourceType":"module"}