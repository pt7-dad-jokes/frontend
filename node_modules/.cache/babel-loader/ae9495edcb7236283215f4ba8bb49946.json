{"ast":null,"code":"import _slicedToArray from \"/Users/codycaro/Desktop/LambdaProjects/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/codycaro/Desktop/LambdaProjects/frontend/src/components/LoginForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Field, withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nfunction LoginForm({\n  errors,\n  touched,\n  values,\n  status\n}) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        users = _useState2[0],\n        setUsers = _useState2[1];\n\n  const _useState3 = useState({\n    login: true,\n    forgotPassword: false,\n    signup: false\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        formState = _useState4[0],\n        setFormState = _useState4[1];\n\n  useEffect(() => {\n    if (status) {\n      setUsers([...users, status]);\n    }\n  }, [status]);\n\n  function switchFormState(formToShow) {\n    setFormState({\n      login: false,\n      forgotPassword: false,\n      signup: false\n    });\n    setFormState(formToShow = true);\n    console.log(formToShow);\n    console.log(formState);\n  }\n\n  return React.createElement(\"div\", {\n    style: formState.forgotPassword === true ? {\n      display: \"none\"\n    } : {\n      display: \"block\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: \"input\",\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), touched.email && errors.email && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, errors.email), React.createElement(Field, {\n    component: \"input\",\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), touched.password && errors.password && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, errors.password), React.createElement(\"label\", {\n    className: \"checkbox-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Remember Me\", React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"rememberMe\",\n    checked: values.rememberMe,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"checkmark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Login\")), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Sign Up\"), React.createElement(\"button\", {\n    onClick: () => switchFormState(formState.forgotPassword),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Forgot Password\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Continue As Guest\"));\n}\n\nconst formikLoginHOC = withFormik({\n  mapPropsToValues({\n    username,\n    email,\n    password,\n    rememberMe\n  }) {\n    return {\n      username: username || \"\",\n      email: email || \"\",\n      password: password || \"\",\n      rememberMe: rememberMe || false\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email().required(),\n    password: Yup.string().required(),\n    rememberMe: Yup.string()\n  }),\n\n  handleSubmit(values, {\n    setStatus,\n    resetForm\n  }) {\n    axios.post(\"https://dadjokes-buildweeks.herokuapp.com/api/auth/login\", values).then(res => {\n      console.log(\"handleSubmit: then: res: \", res);\n      setStatus(res.data);\n      resetForm();\n    }).catch(err => console.error(\"handleSubmit: catch: err: \", err));\n  }\n\n});\nconst LoginFormWithFormik = formikLoginHOC(LoginForm);\nexport default LoginFormWithFormik;","map":{"version":3,"sources":["/Users/codycaro/Desktop/LambdaProjects/frontend/src/components/LoginForm.js"],"names":["React","useState","useEffect","Form","Field","withFormik","Yup","axios","LoginForm","errors","touched","values","status","users","setUsers","login","forgotPassword","signup","formState","setFormState","switchFormState","formToShow","console","log","display","email","password","rememberMe","formikLoginHOC","mapPropsToValues","username","validationSchema","object","shape","string","required","handleSubmit","setStatus","resetForm","post","then","res","data","catch","err","error","LoginFormWithFormik"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Field, withFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport axios from \"axios\";\n\nfunction LoginForm({ errors, touched, values, status }) {\n  const [users, setUsers] = useState([]);\n  const [formState, setFormState] = useState({\n    login: true,\n    forgotPassword: false,\n    signup: false\n  });\n\n  useEffect(() => {\n    if (status) {\n      setUsers([...users, status]);\n    }\n  }, [status]);\n\n  function switchFormState(formToShow) {\n    setFormState({\n      login: false,\n      forgotPassword: false,\n      signup: false\n    });\n\n    setFormState((formToShow = true));\n    console.log(formToShow);\n    console.log(formState);\n  }\n\n  return (\n    <div\n      style={\n        formState.forgotPassword === true\n          ? { display: \"none\" }\n          : { display: \"block\" }\n      }\n    >\n      <Form>\n        <Field component=\"input\" type=\"text\" name=\"email\" placeholder=\"Email\" />\n        {touched.email && errors.email && (\n          <p className=\"error\">{errors.email}</p>\n        )}\n        <Field\n          component=\"input\"\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n        />\n        {touched.password && errors.password && (\n          <p className=\"error\">{errors.password}</p>\n        )}\n        <label className=\"checkbox-container\">\n          Remember Me\n          <Field\n            type=\"checkbox\"\n            name=\"rememberMe\"\n            checked={values.rememberMe}\n          />\n          <span className=\"checkmark\" />\n        </label>\n        <button>Login</button>\n      </Form>\n      <button>Sign Up</button>\n      <button onClick={() => switchFormState(formState.forgotPassword)}>\n        Forgot Password\n      </button>\n      <button>Continue As Guest</button>\n    </div>\n  );\n}\n\nconst formikLoginHOC = withFormik({\n  mapPropsToValues({ username, email, password, rememberMe }) {\n    return {\n      username: username || \"\",\n      email: email || \"\",\n      password: password || \"\",\n      rememberMe: rememberMe || false\n    };\n  },\n  validationSchema: Yup.object().shape({\n    email: Yup.string()\n      .email()\n      .required(),\n    password: Yup.string().required(),\n    rememberMe: Yup.string()\n  }),\n\n  handleSubmit(values, { setStatus, resetForm }) {\n    axios\n      .post(\"https://dadjokes-buildweeks.herokuapp.com/api/auth/login\", values)\n      .then(res => {\n        console.log(\"handleSubmit: then: res: \", res);\n        setStatus(res.data);\n        resetForm();\n      })\n      .catch(err => console.error(\"handleSubmit: catch: err: \", err));\n  }\n});\nconst LoginFormWithFormik = formikLoginHOC(LoginForm);\n\nexport default LoginFormWithFormik;\n"]},"metadata":{},"sourceType":"module"}