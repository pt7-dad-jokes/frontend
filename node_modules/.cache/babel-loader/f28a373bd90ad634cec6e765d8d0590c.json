{"ast":null,"code":"var _jsxFileName = \"/Users/codycaro/Desktop/LambdaProjects/frontend/src/components/ForgotPasswordForm.js\";\nimport React from \"react\";\n\nfunction ForgotPasswordForm({\n  errors,\n  touched,\n  values,\n  status,\n  formState\n}) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(Field, {\n    component: \"input\",\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }), touched.email && errors.email && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, errors.email), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Send Password\")));\n}\n\nconst formikForgotPasswordHOC = withFormik({\n  mapPropsToValues({\n    email\n  }) {\n    return {\n      email: email || \"\"\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email().required()\n  }),\n\n  handleSubmit(values, {\n    setStatus,\n    resetForm\n  }) {\n    axios.post(\"https://dadjokes-buildweeks.herokuapp.com/api/auth/login\", values).then(res => {\n      console.log(\"handleSubmit: then: res: \", res);\n      setStatus(res.data);\n      resetForm();\n    }).catch(err => console.error(\"handleSubmit: catch: err: \", err));\n  }\n\n});\nconst ForgotPasswordWithFormik = formikForgotPasswordHOC(ForgotPasswordForm);\nexport default ForgotPasswordWithFormik;","map":{"version":3,"sources":["/Users/codycaro/Desktop/LambdaProjects/frontend/src/components/ForgotPasswordForm.js"],"names":["React","ForgotPasswordForm","errors","touched","values","status","formState","email","formikForgotPasswordHOC","withFormik","mapPropsToValues","validationSchema","Yup","object","shape","string","required","handleSubmit","setStatus","resetForm","axios","post","then","res","console","log","data","catch","err","error","ForgotPasswordWithFormik"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,kBAAT,CAA4B;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,OAAV;AAAmBC,EAAAA,MAAnB;AAA2BC,EAAAA,MAA3B;AAAmCC,EAAAA;AAAnC,CAA5B,EAA4E;AAC1E,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,IAAI,EAAC,MAA9B;AAAqC,IAAA,IAAI,EAAC,OAA1C;AAAkD,IAAA,WAAW,EAAC,OAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGH,OAAO,CAACI,KAAR,IAAiBL,MAAM,CAACK,KAAxB,IACC;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBL,MAAM,CAACK,KAA7B,CAHJ,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,CADF,CADF;AAWD;;AAED,MAAMC,uBAAuB,GAAGC,UAAU,CAAC;AACzCC,EAAAA,gBAAgB,CAAC;AAAEH,IAAAA;AAAF,GAAD,EAAY;AAC1B,WAAO;AACLA,MAAAA,KAAK,EAAEA,KAAK,IAAI;AADX,KAAP;AAGD,GALwC;;AAMzCI,EAAAA,gBAAgB,EAAEC,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmB;AACnCP,IAAAA,KAAK,EAAEK,GAAG,CAACG,MAAJ,GACJR,KADI,GAEJS,QAFI;AAD4B,GAAnB,CANuB;;AAYzCC,EAAAA,YAAY,CAACb,MAAD,EAAS;AAAEc,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAT,EAAmC;AAC7CC,IAAAA,KAAK,CACFC,IADH,CACQ,0DADR,EACoEjB,MADpE,EAEGkB,IAFH,CAEQC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,GAAzC;AACAL,MAAAA,SAAS,CAACK,GAAG,CAACG,IAAL,CAAT;AACAP,MAAAA,SAAS;AACV,KANH,EAOGQ,KAPH,CAOSC,GAAG,IAAIJ,OAAO,CAACK,KAAR,CAAc,4BAAd,EAA4CD,GAA5C,CAPhB;AAQD;;AArBwC,CAAD,CAA1C;AAuBA,MAAME,wBAAwB,GAAGtB,uBAAuB,CAACP,kBAAD,CAAxD;AAEA,eAAe6B,wBAAf","sourcesContent":["import React from \"react\";\n\nfunction ForgotPasswordForm({ errors, touched, values, status, formState }) {\n  return (\n    <div>\n      <Form>\n        <Field component=\"input\" type=\"text\" name=\"email\" placeholder=\"Email\" />\n        {touched.email && errors.email && (\n          <p className=\"error\">{errors.email}</p>\n        )}\n        <button>Send Password</button>\n      </Form>\n    </div>\n  );\n}\n\nconst formikForgotPasswordHOC = withFormik({\n  mapPropsToValues({ email }) {\n    return {\n      email: email || \"\"\n    };\n  },\n  validationSchema: Yup.object().shape({\n    email: Yup.string()\n      .email()\n      .required()\n  }),\n\n  handleSubmit(values, { setStatus, resetForm }) {\n    axios\n      .post(\"https://dadjokes-buildweeks.herokuapp.com/api/auth/login\", values)\n      .then(res => {\n        console.log(\"handleSubmit: then: res: \", res);\n        setStatus(res.data);\n        resetForm();\n      })\n      .catch(err => console.error(\"handleSubmit: catch: err: \", err));\n  }\n});\nconst ForgotPasswordWithFormik = formikForgotPasswordHOC(ForgotPasswordForm);\n\nexport default ForgotPasswordWithFormik;\n"]},"metadata":{},"sourceType":"module"}